npm install ethereumjs-tx@1.3.3

node

var Tx = require('ethereumjs-tx')
var Web3 = require('web3');
var web3 = new Web3('https://ropsten.infura.io/v3/6c276004f9424880a009383d7f46381c');
const accountAddress = '0xF0f5a2533D607a4Ef02221eA580c60eE842f7057'
const privateKey1 = Buffer.from(process.env.PRIVATE_KEY_1, 'hex')
const contractAddress = '0x17fA656Ae3E9671A1e67FFC69605cD8bCf4A21e5'

Web3
var abi = [{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"constant":false,"inputs":[{"internalType":"uint256","name":"groupId","type":"uint256"},{"internalType":"string","name":"eventName","type":"string"},{"internalType":"uint256","name":"createdDate","type":"uint256"},{"internalType":"uint256","name":"betsOpenTimestamp","type":"uint256"},{"internalType":"uint256","name":"betsCloseTimestamp","type":"uint256"},{"internalType":"string","name":"winCondition","type":"string"},{"internalType":"bool","name":"winResult","type":"bool"},{"internalType":"uint256","name":"houseFees","type":"uint256"},{"internalType":"uint256","name":"payoutPercentage","type":"uint256"},{"internalType":"string","name":"status","type":"string"}],"name":"createEvent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"string","name":"name","type":"string"}],"name":"createGroup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"id","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"string","name":"status","type":"string"}],"name":"createWager","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"events","outputs":[{"internalType":"uint256","name":"groupId","type":"uint256"},{"internalType":"string","name":"eventName","type":"string"},{"internalType":"uint256","name":"createdDate","type":"uint256"},{"internalType":"uint256","name":"betsOpenTimestamp","type":"uint256"},{"internalType":"uint256","name":"betsCloseTimestamp","type":"uint256"},{"internalType":"string","name":"winCondition","type":"string"},{"internalType":"bool","name":"winResult","type":"bool"},{"internalType":"uint256","name":"houseFees","type":"uint256"},{"internalType":"uint256","name":"payoutPercentage","type":"uint256"},{"internalType":"string","name":"status","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"getWager","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"string","name":"","type":"string"},{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"groups","outputs":[{"internalType":"string","name":"Name","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"eventId","type":"uint256"},{"internalType":"string","name":"status","type":"string"}],"name":"modifyEventStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"wagerAddr","type":"address"},{"internalType":"string","name":"status","type":"string"}],"name":"modifyWagerStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"wagers","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"status","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}]
abi


const contract = new web3.eth.Contract(abi, contractAddress)
const data = contract.methods.getWager('0x71C7656EC7ab88b098defB751B7401B5f6d8976F').call((err,result)=>{console.log(result)})
